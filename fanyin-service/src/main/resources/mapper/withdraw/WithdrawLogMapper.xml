<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fanyin.mapper.withdraw.WithdrawLogMapper">
  <resultMap id="BaseResultMap" type="com.fanyin.model.withdraw.WithdrawLog">
    <!--
      @create by mybatis
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="user_type" jdbcType="TINYINT" property="userType" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="real_amount" jdbcType="DECIMAL" property="realAmount" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="use_free" jdbcType="BIT" property="useFree" />
    <result column="bank_num" jdbcType="CHAR" property="bankNum" />
    <result column="bank_code" jdbcType="CHAR" property="bankCode" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
  </resultMap>
  <sql id="BaseColumnList">
    <!--
      @create by mybatis
    -->
    id, user_id, state,user_type, amount, real_amount,fee, use_free, bank_num, bank_code, add_time, update_time,
    order_no
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      @create by mybatis
    -->
    select 
    <include refid="BaseColumnList" />
    from withdraw_log
    where id = #{id,jdbcType=INTEGER}
  </select>

  <insert id="insertSelective" parameterType="com.fanyin.model.withdraw.WithdrawLog">
    <!--
      @create by mybatis
    -->
    insert into withdraw_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="state != null">
        state,
      </if>
        <if test="userType != null">
            user_type,
        </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="realAmount != null">
        real_amount,
      </if>
        <if test="fee != null">
            fee,
        </if>
      <if test="useFree != null">
        use_free,
      </if>
      <if test="bankNum != null">
        bank_num,
      </if>
      <if test="bankCode != null">
        bank_code,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
        <if test="userType != null">
            #{userType,jdbcType=TINYINT},
        </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="realAmount != null">
        #{realAmount,jdbcType=DECIMAL},
      </if>
        <if test="fee != null">
            #{fee,jdbcType=DECIMAL},
        </if>
      <if test="useFree != null">
        #{useFree,jdbcType=BIT},
      </if>
      <if test="bankNum != null">
        #{bankNum,jdbcType=CHAR},
      </if>
      <if test="bankCode != null">
        #{bankCode,jdbcType=CHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fanyin.model.withdraw.WithdrawLog">
    <!--
      @create by mybatis
    -->
    update withdraw_log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
        <if test="userType != null">
            user_type =#{userType,jdbcType=TINYINT},
        </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="realAmount != null">
        real_amount = #{realAmount,jdbcType=DECIMAL},
      </if>
        <if test="fee != null">
            fee = #{fee,jdbcType=DECIMAL},
        </if>
      <if test="useFree != null">
        use_free = #{useFree,jdbcType=BIT},
      </if>
      <if test="bankNum != null">
        bank_num = #{bankNum,jdbcType=CHAR},
      </if>
      <if test="bankCode != null">
        bank_code = #{bankCode,jdbcType=CHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="countFreeWithdraw" resultType="java.lang.Integer">
        select count(1) from withdraw_log
        where state in (1,2)
              and use_free = true
              and update_time &gt;= #{starTime}
              and update_time &lt;= #{endTime}
              and user_type = 0
              and user_id =#{userId}
    </select>
    <select id="getTotalWithdraw" resultType="java.math.BigDecimal">
        select IFNULL(sum(amount),0) from withdraw_log where state in (1,2) and user_type = 0 and user_id = #{userId}
    </select>
</mapper>